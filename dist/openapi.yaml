openapi: 3.0.3
info:
  title: TMDB API
  description: The Movie Database (TMDB) API
  version: 0.32.12
servers:
  - url: https://api.themoviedb.org/3
    description: Main (production) server
  - url: https://api.themoviedb.localhost
    description: Internal staging server for testing
security:
  - bearerAuth: []
tags:
  - name: Companies
    description: Companies details.
  - name: Configuration
    description: The configuration methods are useful to get the static lists of data we use throughout the database.
  - name: Genres
    description: Official genres for movies and TV shows.
  - name: Keywords
    description: Keyword details.
  - name: Networks
    description: TV network details.
  - name: Search
    description: Search for companies and keywords.
paths:
  /company/{company_id}:
    get:
      summary: Details
      description: Get the company details by ID.
      operationId: CompanyDetails
      tags:
        - Companies
      parameters:
        - $ref: '#/components/parameters/CompanyID'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
              example:
                id: 1
                name: Lucasfilm Ltd.
                origin_country: US
                logo_path: /eDWGeg5tdVNcI8aBaaJ21bEBtFa.png
                headquarters: San Francisco, California
                homepage: https://www.lucasfilm.com
                description: ''
                parent_company: ''
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '404':
          $ref: '#/components/responses/404NotFound'
        '429':
          $ref: '#/components/responses/429TooManyRequests'
  /configuration/countries:
    get:
      summary: Countries
      description: Get the list of countries (ISO 3166-1 tags) used throughout TMDB.
      operationId: ConfigurationCountries
      tags:
        - Configuration
      parameters:
        - $ref: '#/components/parameters/LanguageParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Country'
                example:
                  - iso_3166_1: GB
                    english_name: United Kingdom
                    native_name: United Kingdom
                  - iso_3166_1: US
                    english_name: United States of America
                    native_name: United States
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '429':
          $ref: '#/components/responses/429TooManyRequests'
  /configuration/jobs:
    get:
      summary: Jobs
      description: Get the list of the jobs and departments we use on TMDB.
      operationId: ConfigurationJobs
      tags:
        - Configuration
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Department'
                example:
                  - department: Actors
                    jobs:
                      - Actor
                      - Cameo
                      - Special Guest
                      - Voice
                  - department: Directing
                    jobs:
                      - Director
                      - Other
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '429':
          $ref: '#/components/responses/429TooManyRequests'
  /configuration/languages:
    get:
      summary: Languages
      description: Get the list of languages (ISO 639-1 tags) used throughout TMDB.
      operationId: ConfigurationLanguages
      tags:
        - Configuration
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Language'
                example:
                  - iso_639_1: en
                    english_name: English
                    name: English
                  - iso_639_1: eo
                    english_name: Esperanto
                    name: Esperanto
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '429':
          $ref: '#/components/responses/429TooManyRequests'
  /configuration/primary_translations:
    get:
      summary: Primary Translations
      description: Get a list of the officially supported translations on TMDB.
      operationId: ConfigurationPrimaryTranslations
      tags:
        - Configuration
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                example:
                  - en-GB
                  - en-US
                  - eo-EO
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '429':
          $ref: '#/components/responses/429TooManyRequests'
  /configuration/timezones:
    get:
      summary: Timezones
      description: Get the list of timezones used throughout TMDB.
      operationId: ConfigurationTimezones
      tags:
        - Configuration
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CountryWithTimezones'
                example:
                  - iso_3166_1: ES
                    zones:
                      - Europe/Madrid
                      - Africa/Ceuta
                      - Atlantic/Canary
                  - iso_3166_1: GB
                    zones:
                      - Europe/London
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '429':
          $ref: '#/components/responses/429TooManyRequests'
  /genre/movie/list:
    get:
      summary: Movie List
      description: Get the list of official genres for movies.
      operationId: GenreMovieList
      tags:
        - Genres
      parameters:
        - $ref: '#/components/parameters/LanguageParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenreList'
              example:
                genres:
                  - id: 12
                    name: Adventure
                  - id: 14
                    name: Fantasy
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '429':
          $ref: '#/components/responses/429TooManyRequests'
  /genre/tv/list:
    get:
      summary: TV List
      description: Get the list of official genres for TV shows.
      operationId: GenreTvList
      tags:
        - Genres
      parameters:
        - $ref: '#/components/parameters/LanguageParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenreList'
              example:
                genres:
                  - id: 10759
                    name: Action & Adventure
                  - id: 10765
                    name: Sci-Fi & Fantasy
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '429':
          $ref: '#/components/responses/429TooManyRequests'
  /keyword/{keyword_id}:
    get:
      summary: Details
      description: '---'
      operationId: KeywordDetails
      tags:
        - Keywords
      parameters:
        - $ref: '#/components/parameters/KeywordID'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseObject'
              example:
                id: 1701
                name: hero
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '404':
          $ref: '#/components/responses/404NotFound'
        '429':
          $ref: '#/components/responses/429TooManyRequests'
  /network/{network_id}:
    get:
      summary: Details
      description: Get the TV network details by ID.
      operationId: NetworkDetails
      tags:
        - Networks
      parameters:
        - $ref: '#/components/parameters/NetworkID'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
              example:
                id: 49
                name: HBO
                origin_country: US
                logo_path: /tuomPhY2UtuPTqqFnKMVHvSb724.png
                headquarters: New York City, New York
                homepage: https://www.hbo.com
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '404':
          $ref: '#/components/responses/404NotFound'
        '429':
          $ref: '#/components/responses/429TooManyRequests'
  /search/company:
    get:
      summary: Company
      description: Search for companies by their original and alternative names.
      operationId: SearchCompany
      tags:
        - Search
      parameters:
        - $ref: '#/components/parameters/Query'
        - $ref: '#/components/parameters/Page'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyListPage'
              example:
                page: 1
                results:
                  - id: 3268
                    name: HBO
                    origin_country: US
                    logo_path: /tuomPhY2UtuPTqqFnKMVHvSb724.png
                  - id: 14914
                    name: HBO Documentary Films
                    origin_country: US
                    logo_path: /1RZBWz53SpHUTLpRcM8BGv2plIP.png
                total_pages: 2
                total_results: 22
        '400':
          $ref: '#/components/responses/400InvalidPage'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '429':
          $ref: '#/components/responses/429TooManyRequests'
  /search/keyword:
    get:
      summary: Keyword
      description: Search for keywords by their name.
      operationId: SearchKeyword
      tags:
        - Search
      parameters:
        - $ref: '#/components/parameters/Query'
        - $ref: '#/components/parameters/Page'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseObjectListPage'
              example:
                page: 1
                results:
                  - id: 262419
                    name: lost
                total_pages: 5
                total_results: 84
        '400':
          $ref: '#/components/responses/400InvalidPage'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '429':
          $ref: '#/components/responses/429TooManyRequests'
components:
  schemas:
    BaseObject:
      type: object
      description: The most generic type of item.
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int32
          description: |
            The identifier property represents any kind of identifier for any kind of [Thing](https://schema.org/Thing), such as ISBNs, GTIN codes, UUIDs etc.
        name:
          type: string
    CountryCode:
      type: string
      description: |
        [ISO 3166-1 alpha-2 code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)
      minLength: 2
      maxLength: 2
      pattern: ^[A-Z]{2}$
    OrganizationBase:
      allOf:
        - $ref: '#/components/schemas/BaseObject'
        - type: object
          properties:
            origin_country:
              $ref: '#/components/schemas/CountryCode'
            logo_path:
              type: string
    Organization:
      description: An organization such as a company or a TV network.
      allOf:
        - $ref: '#/components/schemas/OrganizationBase'
        - type: object
          properties:
            headquarters:
              type: string
            homepage:
              type: string
              format: uri
    Company:
      description: A production company.
      allOf:
        - $ref: '#/components/schemas/Organization'
        - type: object
          properties:
            description:
              type: string
            parent_company:
              type: string
    Error:
      type: object
      additionalProperties: false
      required:
        - success
        - status_code
        - status_message
      properties:
        success:
          type: boolean
        status_code:
          type: integer
          format: int32
          minimum: 1
          maximum: 47
        status_message:
          type: string
    Country:
      type: object
      additionalProperties: false
      required:
        - iso_3166_1
        - english_name
      properties:
        iso_3166_1:
          $ref: '#/components/schemas/CountryCode'
        english_name:
          type: string
        native_name:
          type: string
    Department:
      type: object
      description: Department with jobs
      additionalProperties: false
      required:
        - department
        - jobs
      properties:
        department:
          type: string
          description: The name of the department
        jobs:
          type: array
          description: A list of jobs within the department
          items:
            type: string
    Language:
      type: object
      additionalProperties: false
      required:
        - iso_639_1
        - english_name
      properties:
        iso_639_1:
          type: string
          description: ISO 639-1 tag
          minLength: 2
          maxLength: 2
          pattern: ^[a-z]{2}$
        english_name:
          type: string
          description: English name of the language
        name:
          type: string
          description: Native name of the language
    CountryWithTimezones:
      type: object
      additionalProperties: false
      required:
        - iso_3166_1
        - zones
      properties:
        iso_3166_1:
          $ref: '#/components/schemas/CountryCode'
        zones:
          type: array
          items:
            type: string
    GenreList:
      type: object
      description: A list of genres
      required:
        - genres
      properties:
        genres:
          type: array
          items:
            $ref: '#/components/schemas/BaseObject'
    ResultPage:
      type: object
      description: A base result page.
      required:
        - page
        - total_pages
        - total_results
      properties:
        page:
          description: The current page number.
          type: integer
          minimum: 1
          maximum: 500
        total_pages:
          description: The number of total pages.
          type: integer
          minimum: 1
          maximum: 500
        total_results:
          description: The number of total results.
          type: integer
          minimum: 0
          maximum: 10000
    CompanyListPage:
      allOf:
        - $ref: '#/components/schemas/ResultPage'
        - type: object
          properties:
            results:
              type: array
              items:
                $ref: '#/components/schemas/OrganizationBase'
          required:
            - results
    BaseObjectListPage:
      allOf:
        - $ref: '#/components/schemas/ResultPage'
        - type: object
          required:
            - results
          properties:
            results:
              type: array
              items:
                $ref: '#/components/schemas/BaseObject'
  parameters:
    CompanyID:
      in: path
      name: company_id
      description: The company ID.
      required: true
      schema:
        type: integer
        format: int32
    LanguageParam:
      in: query
      name: language
      description: '`ISO-639-1`-`ISO-3166-1` code'
      schema:
        type: string
        minLength: 2
        maxLength: 5
        pattern: ^([a-z]{2})-([A-Z]{2})$
        default: en-US
    KeywordID:
      in: path
      name: keyword_id
      description: The keyword ID.
      required: true
      schema:
        type: integer
        format: int32
    NetworkID:
      in: path
      name: network_id
      description: The TV network ID.
      required: true
      schema:
        type: integer
        format: int32
    Query:
      in: query
      name: query
      required: true
      schema:
        type: string
    Page:
      in: query
      name: page
      schema:
        type: integer
        format: int32
        minimum: 1
        maximum: 500
        default: 1
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
  responses:
    401Unauthorized:
      description: Authorization information is missing or invalid.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            success: false
            status_code: 7
            status_message: 'Invalid API key: You must be granted a valid key.'
    404NotFound:
      description: The server can not find the requested resource.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            success: false
            status_code: 34
            status_message: The resource you requested could not be found.
    429TooManyRequests:
      description: Too many requests in a given amount of time (“rate limiting”).
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            success: false
            status_code: 25
            status_message: Your request count is over the allowed limit.
    400InvalidPage:
      description: Invalid page number
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            success: false
            status_code: 22
            status_message: 'Invalid page: Pages start at 1 and max at 500. They are expected to be an integer.'
