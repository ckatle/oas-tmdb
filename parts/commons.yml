---
components:
  parameters:
    IncludeAdult:
      in: query
      name: include_adult
      schema:
        type: boolean
        default: false
    LanguageParam:
      in: query
      name: language
      schema:
        type: string
        minLength: 2
        maxLength: 5
        pattern: '^([a-z]{2})-([A-Z]{2})$'
        default: en-US
      description: '`ISO-639-1`-`ISO-3166-1` code'
    PageParam:
      in: query
      name: page
      schema:
        type: integer
        format: int32
        minimum: 1
        maximum: 500
        default: 1
    PrimaryReleaseYear:
      in: query
      name: primary_release_year
      schema:
        type: integer
        format: int32
    Query:
      in: query
      name: query
      required: true
      schema:
        type: string
    Region:
      in: query
      name: region
      schema:
        type: string
        minLength: 2
        maxLength: 2
        pattern: '^([A-Z]{2})$'
      description: '`ISO-3166-1` code'
    SeriesID:
      in: path
      name: series_id
      schema:
        type: integer
        format: int32
      required: true
      description: The tv series ID.
    Year:
      in: query
      name: year
      schema:
        type: string
        minLength: 4
        maxLength: 4
        pattern: '^([1-9][0-9]{3})$'
  responses:
    InvalidPage:
      description: Invalid page number
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            - success: false
              status_code: 22
              status_message: 'Invalid page: Pages start at 1 and max at 500. They are expected to be an integer.'
    NotFound:
      description: The server can not find the requested resource.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            - success: false
              status_code: 34
              status_message: 'The resource you requested could not be found.'
    TooManyRequests:
      description: Too many requests in a given amount of time (“rate limiting”).
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            - success: false
              status_code: 25
              status_message: 'Your request count is over the allowed limit.'
    Unauthorized:
      description: Authorization information is missing or invalid.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            - success: false
              status_code: 7
              status_message: 'Invalid API key: You must be granted a valid key.'
  schemas:
    CastListItem:
      type: object
      properties:
        id:
          type: integer
        adult:
          type: boolean
        gender:
          type: integer
        known_for_department:
          type: string
        name:
          type: string
        original_name:
          type: string
        popularity:
          type: number
          format: float
        profile_path:
          type: string
        cast_id:
          type: integer
        character:
          type: string
        credit_id:
          type: string
        order:
          type: integer
      required:
        - id
        - name
    CollectionBase:
      allOf:
        - $ref: '#/components/schemas/Thing'
        - type: object
          additionalProperties: false
          required:
            - backdrop_path
            - poster_path
          properties:
            poster_path:
              type: string
            backdrop_path:
              type: string
    CollectionListItem:
      allOf:
        - $ref: '#/components/schemas/CollectionBase'
        - type: object
          properties:
            adult:
              type: boolean
            original_language:
              type: string
            original_name:
              type: string
            overview:
              type: string
          required:
            - original_language
            - original_name
    CollectionListPage:
      additionalProperties: false
      allOf:
        - $ref: '#/components/schemas/Page'
        - type: object
          properties:
            results:
              type: array
              items:
                $ref: '#/components/schemas/CollectionListItem'
          required:
            - results
    CompanyBase:
      allOf:
        - $ref: '#/components/schemas/Thing'
        - type: object
          additionalProperties: false
          properties:
            origin_country:
              $ref: '#/components/schemas/CountryCode'
            logo_path:
              type: string
    CompanyListPage:
      additionalProperties: false
      allOf:
        - $ref: '#/components/schemas/Page'
        - type: object
          properties:
            results:
              type: array
              items:
                $ref: '#/components/schemas/CompanyBase'
          required:
            - results
    CountryCode:
      type: string
      title: ISO 3166-1 tag
      description: >
        [ISO 3166-1 alpha-2 code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)
      minLength: 2
      maxLength: 2
      pattern: '^[A-Z]{2}$'
    Credits:
      type: object
      properties:
        id:
          type: integer
        cast:
          type: array
          items:
            $ref: '#/components/schemas/CastListItem'
        crew:
          type: array
          items:
            $ref: '#/components/schemas/CrewListItem'
      required:
        - cast
        - crew
    CrewListItem:
      type: object
      properties:
        id:
          type: integer
        adult:
          type: boolean
        gender:
          type: integer
        known_for_department:
          type: string
        name:
          type: string
        original_name:
          type: string
        popularity:
          type: number
          format: float
        profile_path:
          type: string
        credit_id:
          type: string
        department:
          type: string
        job:
          type: string
      required:
        - id
        - name
    # Schema for error response body
    Error:
      type: object
      additionalProperties: false
      properties:
        success:
          type: boolean
        status_code:
          type: integer
          format: int32
          minimum: 1
          maximum: 47
        status_message:
          type: string
      required:
        - success
        - status_code
        - status_message
    Language:
      type: object
      additionalProperties: false
      properties:
        iso_639_1:
          type: string
          description: ISO 639-1 tag
          minLength: 2
          maxLength: 2
          pattern: '^[a-z]{2}$'
        english_name:
          type: string
        name:
          type: string
      required:
        - iso_639_1
        - english_name
    Media:
      type: object
      additionalProperties: false
      properties:
        media_type:
          type: string
          enum: [movie, person, tv]
          x-enum-varnames:
            - MediaTypeMovie
            - MediaTypePerson
            - MediaTypeTv
          x-go-type-name: MediaType
      required:
        - media_type
      discriminator:
        propertyName: media_type
    MovieListItem:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        original_language:
          type: string
        original_title:
          type: string
        adult:
          type: boolean
        backdrop_path:
          type: string
        genre_ids:
          type: array
          items:
            type: integer
            format: int32
        overview:
          type: string
        popularity:
          type: number
          format: float
        poster_path:
          type: string
        release_date:
          type: string
          format: date
        video:
          type: boolean
        vote_average:
          type: number
          format: float
        vote_count:
          type: integer
      required:
        - id
        - title
        - original_language
        - original_title
    MovieListItemWithMediaType:
      allOf:
        - $ref: '#/components/schemas/Media'
        - $ref: '#/components/schemas/MovieListItem'
    MovieListPage:
      allOf:
        - $ref: '#/components/schemas/Page'
        - type: object
          properties:
            results:
              type: array
              items:
                $ref: '#/components/schemas/MovieListItem'
          required:
            - results
    MovieListPageWithDates:
      allOf:
        - type: object
          properties:
            dates:
              type: object
              properties:
                maximum:
                  type: string
                  format: date
                minimum:
                  type: string
                  format: date
              required:
                - maximum
                - minimum
          required:
            - dates
        - $ref: '#/components/schemas/MovieListPage'
    MultiListPage:
      allOf:
        - $ref: '#/components/schemas/Page'
        - type: object
          properties:
            results:
              type: array
              items:
                oneOf:
                  - $ref: '#/components/schemas/MovieListItemWithMediaType'
                  - $ref: '#/components/schemas/PersonListItemWithMediaType'
                  - $ref: '#/components/schemas/TvListItemWithMediaType'
                discriminator:
                  propertyName: media_type
                  mapping:
                    movie: '#/components/schemas/MovieListItemWithMediaType'
                    person: '#/components/schemas/PersonListItemWithMediaType'
                    tv: '#/components/schemas/TvListItemWithMediaType'
          required:
            - results
    Thing:
      title: Object
      type: object
      additionalProperties: false
      properties:
        id:
          type: integer
          format: int32
          description: >
            The identifier property represents any kind of identifier for any kind of [Thing](https://schema.org/Thing),
            such as ISBNs, GTIN codes, UUIDs etc.
        name:
          type: string
      required:
        - id
        - name
    ObjectListPage:
      additionalProperties: false
      allOf:
        - $ref: '#/components/schemas/Page'
        - type: object
          properties:
            results:
              type: array
              items:
                $ref: '#/components/schemas/Thing'
          required:
            - results
    Page:
      type: object
      additionalProperties: false
      properties:
        page:
          type: integer
          minimum: 1
          maximum: 500
        total_pages:
          type: integer
          minimum: 1
          maximum: 500
        total_results:
          type: integer
          minimum: 0
          maximum: 10000
      required:
        - page
        - total_pages
        - total_results
    PersonListItem:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        original_name:
          type: string
        adult:
          type: boolean
        gender:
          type: integer
          format: int32
        known_for_department:
          type: string
        popularity:
          type: number
          format: float
        profile_path:
          type: string
        known_for:
          type: array
          items:
            oneOf:
              - $ref: '#/components/schemas/MovieListItemWithMediaType'
              - $ref: '#/components/schemas/TvListItemWithMediaType'
            discriminator:
              propertyName: media_type
              mapping:
                movie: '#/components/schemas/MovieListItemWithMediaType'
                tv: '#/components/schemas/TvListItemWithMediaType'
      required:
        - id
        - name
        - original_name
    PersonListItemWithMediaType:
      allOf:
        - $ref: '#/components/schemas/Media'
        - $ref: '#/components/schemas/PersonListItem'
    PersonListPage:
      allOf:
        - $ref: '#/components/schemas/Page'
        - type: object
          properties:
            results:
              type: array
              items:
                $ref: '#/components/schemas/PersonListItem'
          required:
            - results
    ProductionCountry:
      type: object
      properties:
        iso_3166_1:
          $ref: '#/components/schemas/CountryCode'
        name:
          type: string
      required:
        - iso_3166_1
        - name
    TvListItem:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        original_language:
          type: string
        original_name:
          type: string
        adult:
          type: boolean
        backdrop_path:
          type: string
        genre_ids:
          type: array
          items:
            type: integer
            format: int32
        origin_country:
          type: array
          items:
            type: string
            minLength: 2
            maxLength: 2
            pattern: '^([A-Z]{2})$'
        overview:
          type: string
        popularity:
          type: number
          format: float
        poster_path:
          type: string
        first_air_date:
          type: string
          format: date
        vote_average:
          type: number
          format: float
        vote_count:
          type: integer
      required:
        - id
        - name
        - original_language
        - original_name
    TvListItemWithMediaType:
      allOf:
        - $ref: '#/components/schemas/Media'
        - $ref: '#/components/schemas/TvListItem'
    TvListPage:
      allOf:
        - $ref: '#/components/schemas/Page'
        - type: object
          properties:
            results:
              type: array
              items:
                $ref: '#/components/schemas/TvListItem'
          required:
            - results
